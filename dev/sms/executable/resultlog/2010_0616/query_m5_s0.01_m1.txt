QueryProcessor.java:56: main:1. queryFile=/Users/cao/DATA/SONET/svntrunk/semtools/dev/sms/oboedb/query_m5_s0.01
QueryProcessor.java:57: main:2. queryStrategy=1
QueryProcessor.java:58: main:3. dbname=oboe_syn
QueryProcessor.java:59: main:4. resultWithRecord=true
QueryProcessor.java:60: main:5. queryResultFile=
QueryList.java:73: read:oneLine=BEGIN QUERY:1
QueryList.java:73: read:oneLine=BEGIN QUERY:2
QueryList.java:73: read:oneLine=BEGIN QUERY:3
QueryList.java:73: read:oneLine=BEGIN QUERY:4
QueryList.java:73: read:oneLine=BEGIN QUERY:5
QueryList.java:73: read:oneLine=BEGIN QUERY:6
QueryList.java:73: read:oneLine=BEGIN QUERY:7
QueryList.java:73: read:oneLine=BEGIN QUERY:8
QueryList.java:73: read:oneLine=BEGIN QUERY:9
QueryList.java:73: read:oneLine=BEGIN QUERY:10
QueryProcessor.java:65: main:queryList=
i=0:1: 'e5'['m5cha' <=78], Context: {}
i=1:1: 'e5'['m5cha' <=87], Context: {}
i=2:1: 'e5'['m5cha' <=89], Context: {}
i=3:1: 'e5'['m5cha' <=91], Context: {}
i=4:1: 'e5'['m5cha' <=98], Context: {}
i=5:1: 'e5'['m5cha' <=123], Context: {}
i=6:1: 'e5'['m5cha' <=134], Context: {}
i=7:1: 'e5'['m5cha' <=135], Context: {}
i=8:1: 'e5'['m5cha' <=144], Context: {}
i=9:1: 'e5'['m5cha' <=154], Context: {}

QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=78], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=78,m5)], 2=[('m5cha' <=78,m5)], 3=[('m5cha' <=78,m5)], 4=[('m5cha' <=78,m5)], 5=[('m5cha' <=78,m5)], 6=[('m5cha' <=78,m5)], 7=[('m5cha' <=78,m5)], 8=[('m5cha' <=78,m5)], 9=[('m5cha' <=78,m5)], 10=[('m5cha' <=78,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=78}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=78,m5)], 2=[('m5cha' <=78,m5)], 3=[('m5cha' <=78,m5)], 4=[('m5cha' <=78,m5)], 5=[('m5cha' <=78,m5)], 6=[('m5cha' <=78,m5)], 7=[('m5cha' <=78,m5)], 8=[('m5cha' <=78,m5)], 9=[('m5cha' <=78,m5)], 10=[('m5cha' <=78,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=78);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=78);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =500
ContextChain.java:289: execute:Context chain result size=500
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=500
OMQuery.java:355: execute:Time used (Query): 124 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=500
OMQuery.java:388: execute:Total queryResultSet size=500
QueryProcessor.java:78: main:Query i=0,result size=500
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=87], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=87,m5)], 2=[('m5cha' <=87,m5)], 3=[('m5cha' <=87,m5)], 4=[('m5cha' <=87,m5)], 5=[('m5cha' <=87,m5)], 6=[('m5cha' <=87,m5)], 7=[('m5cha' <=87,m5)], 8=[('m5cha' <=87,m5)], 9=[('m5cha' <=87,m5)], 10=[('m5cha' <=87,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=87}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=87,m5)], 2=[('m5cha' <=87,m5)], 3=[('m5cha' <=87,m5)], 4=[('m5cha' <=87,m5)], 5=[('m5cha' <=87,m5)], 6=[('m5cha' <=87,m5)], 7=[('m5cha' <=87,m5)], 8=[('m5cha' <=87,m5)], 9=[('m5cha' <=87,m5)], 10=[('m5cha' <=87,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=87);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=87);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =530
ContextChain.java:289: execute:Context chain result size=530
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=530
OMQuery.java:355: execute:Time used (Query): 52 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=530
OMQuery.java:388: execute:Total queryResultSet size=530
QueryProcessor.java:78: main:Query i=1,result size=530
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=89], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=89,m5)], 2=[('m5cha' <=89,m5)], 3=[('m5cha' <=89,m5)], 4=[('m5cha' <=89,m5)], 5=[('m5cha' <=89,m5)], 6=[('m5cha' <=89,m5)], 7=[('m5cha' <=89,m5)], 8=[('m5cha' <=89,m5)], 9=[('m5cha' <=89,m5)], 10=[('m5cha' <=89,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=89}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=89,m5)], 2=[('m5cha' <=89,m5)], 3=[('m5cha' <=89,m5)], 4=[('m5cha' <=89,m5)], 5=[('m5cha' <=89,m5)], 6=[('m5cha' <=89,m5)], 7=[('m5cha' <=89,m5)], 8=[('m5cha' <=89,m5)], 9=[('m5cha' <=89,m5)], 10=[('m5cha' <=89,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=89);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=89);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =540
ContextChain.java:289: execute:Context chain result size=540
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=540
OMQuery.java:355: execute:Time used (Query): 50 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=540
OMQuery.java:388: execute:Total queryResultSet size=540
QueryProcessor.java:78: main:Query i=2,result size=540
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=91], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=91,m5)], 2=[('m5cha' <=91,m5)], 3=[('m5cha' <=91,m5)], 4=[('m5cha' <=91,m5)], 5=[('m5cha' <=91,m5)], 6=[('m5cha' <=91,m5)], 7=[('m5cha' <=91,m5)], 8=[('m5cha' <=91,m5)], 9=[('m5cha' <=91,m5)], 10=[('m5cha' <=91,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=91}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=91,m5)], 2=[('m5cha' <=91,m5)], 3=[('m5cha' <=91,m5)], 4=[('m5cha' <=91,m5)], 5=[('m5cha' <=91,m5)], 6=[('m5cha' <=91,m5)], 7=[('m5cha' <=91,m5)], 8=[('m5cha' <=91,m5)], 9=[('m5cha' <=91,m5)], 10=[('m5cha' <=91,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=91);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=91);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =550
ContextChain.java:289: execute:Context chain result size=550
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=550
OMQuery.java:355: execute:Time used (Query): 47 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=550
OMQuery.java:388: execute:Total queryResultSet size=550
QueryProcessor.java:78: main:Query i=3,result size=550
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=98], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=98,m5)], 2=[('m5cha' <=98,m5)], 3=[('m5cha' <=98,m5)], 4=[('m5cha' <=98,m5)], 5=[('m5cha' <=98,m5)], 6=[('m5cha' <=98,m5)], 7=[('m5cha' <=98,m5)], 8=[('m5cha' <=98,m5)], 9=[('m5cha' <=98,m5)], 10=[('m5cha' <=98,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=98}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=98,m5)], 2=[('m5cha' <=98,m5)], 3=[('m5cha' <=98,m5)], 4=[('m5cha' <=98,m5)], 5=[('m5cha' <=98,m5)], 6=[('m5cha' <=98,m5)], 7=[('m5cha' <=98,m5)], 8=[('m5cha' <=98,m5)], 9=[('m5cha' <=98,m5)], 10=[('m5cha' <=98,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=98);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=98);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =580
ContextChain.java:289: execute:Context chain result size=580
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=580
OMQuery.java:355: execute:Time used (Query): 47 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=580
OMQuery.java:388: execute:Total queryResultSet size=580
QueryProcessor.java:78: main:Query i=4,result size=580
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=123], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=123,m5)], 2=[('m5cha' <=123,m5)], 3=[('m5cha' <=123,m5)], 4=[('m5cha' <=123,m5)], 5=[('m5cha' <=123,m5)], 6=[('m5cha' <=123,m5)], 7=[('m5cha' <=123,m5)], 8=[('m5cha' <=123,m5)], 9=[('m5cha' <=123,m5)], 10=[('m5cha' <=123,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=123}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=123,m5)], 2=[('m5cha' <=123,m5)], 3=[('m5cha' <=123,m5)], 4=[('m5cha' <=123,m5)], 5=[('m5cha' <=123,m5)], 6=[('m5cha' <=123,m5)], 7=[('m5cha' <=123,m5)], 8=[('m5cha' <=123,m5)], 9=[('m5cha' <=123,m5)], 10=[('m5cha' <=123,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=123);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=123);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =600
ContextChain.java:289: execute:Context chain result size=600
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=600
OMQuery.java:355: execute:Time used (Query): 47 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=600
OMQuery.java:388: execute:Total queryResultSet size=600
QueryProcessor.java:78: main:Query i=5,result size=600
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=134], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=134,m5)], 2=[('m5cha' <=134,m5)], 3=[('m5cha' <=134,m5)], 4=[('m5cha' <=134,m5)], 5=[('m5cha' <=134,m5)], 6=[('m5cha' <=134,m5)], 7=[('m5cha' <=134,m5)], 8=[('m5cha' <=134,m5)], 9=[('m5cha' <=134,m5)], 10=[('m5cha' <=134,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=134}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=134,m5)], 2=[('m5cha' <=134,m5)], 3=[('m5cha' <=134,m5)], 4=[('m5cha' <=134,m5)], 5=[('m5cha' <=134,m5)], 6=[('m5cha' <=134,m5)], 7=[('m5cha' <=134,m5)], 8=[('m5cha' <=134,m5)], 9=[('m5cha' <=134,m5)], 10=[('m5cha' <=134,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=134);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=134);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =610
ContextChain.java:289: execute:Context chain result size=610
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=610
OMQuery.java:355: execute:Time used (Query): 45 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=610
OMQuery.java:388: execute:Total queryResultSet size=610
QueryProcessor.java:78: main:Query i=6,result size=610
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=135], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=135,m5)], 2=[('m5cha' <=135,m5)], 3=[('m5cha' <=135,m5)], 4=[('m5cha' <=135,m5)], 5=[('m5cha' <=135,m5)], 6=[('m5cha' <=135,m5)], 7=[('m5cha' <=135,m5)], 8=[('m5cha' <=135,m5)], 9=[('m5cha' <=135,m5)], 10=[('m5cha' <=135,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=135}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=135,m5)], 2=[('m5cha' <=135,m5)], 3=[('m5cha' <=135,m5)], 4=[('m5cha' <=135,m5)], 5=[('m5cha' <=135,m5)], 6=[('m5cha' <=135,m5)], 7=[('m5cha' <=135,m5)], 8=[('m5cha' <=135,m5)], 9=[('m5cha' <=135,m5)], 10=[('m5cha' <=135,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=135);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=135);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =640
ContextChain.java:289: execute:Context chain result size=640
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=640
OMQuery.java:355: execute:Time used (Query): 46 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=640
OMQuery.java:388: execute:Total queryResultSet size=640
QueryProcessor.java:78: main:Query i=7,result size=640
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=144], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=144,m5)], 2=[('m5cha' <=144,m5)], 3=[('m5cha' <=144,m5)], 4=[('m5cha' <=144,m5)], 5=[('m5cha' <=144,m5)], 6=[('m5cha' <=144,m5)], 7=[('m5cha' <=144,m5)], 8=[('m5cha' <=144,m5)], 9=[('m5cha' <=144,m5)], 10=[('m5cha' <=144,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=144}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=144,m5)], 2=[('m5cha' <=144,m5)], 3=[('m5cha' <=144,m5)], 4=[('m5cha' <=144,m5)], 5=[('m5cha' <=144,m5)], 6=[('m5cha' <=144,m5)], 7=[('m5cha' <=144,m5)], 8=[('m5cha' <=144,m5)], 9=[('m5cha' <=144,m5)], 10=[('m5cha' <=144,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=144);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=144);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =670
ContextChain.java:289: execute:Context chain result size=670
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=670
OMQuery.java:355: execute:Time used (Query): 44 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=670
OMQuery.java:388: execute:Total queryResultSet size=670
QueryProcessor.java:78: main:Query i=8,result size=670
QueryProcessor.java:74: main:
*****
Process query: 1: 'e5'['m5cha' <=154], Context: {}
OMQuery.java:339: execute:contextQueryDNF = [(1) ]
---------------
OMQuery.java:343: execute:[1/1] contextQuery:(1) 
PostgresDB.java:138: calKeyAttr:entityTypeName='e5'
PostgresDB.java:296: retrieveObsTypeLabel:sql= SELECT annot_id, otypelabel FROM observation_type AS ot WHERE ename ILIKE 'e5';
PostgresDB.java:202: retrieveKeyAttrList:sql= SELECT DISTINCT mt.annot_id as annot_id, mt.otypelabel as otypelabel, attrname FROM map, measurement_type AS mt WHERE mt.annot_id = map.annot_id AND mt.mtypelabel=map.mtypelabel AND mt.isKey = 't' ;
RawDB.java:374: retrieveOneTbAttribute:sql= SELECT DISTINCT mt.annot_id, attrname FROM measurement_type AS mt, map 
WHERE (map.annot_id=mt.annot_id AND map.mtypelabel = mt.mtypelabel) AND mt.characteristic = 'm5cha';
RawDB.java:338: retrieveTbAttribute:tmpTbAttribute=
{1=[('m5cha' <=154,m5)], 2=[('m5cha' <=154,m5)], 3=[('m5cha' <=154,m5)], 4=[('m5cha' <=154,m5)], 5=[('m5cha' <=154,m5)], 6=[('m5cha' <=154,m5)], 7=[('m5cha' <=154,m5)], 8=[('m5cha' <=154,m5)], 9=[('m5cha' <=154,m5)], 10=[('m5cha' <=154,m5)]}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:344: retrieveTbAttribute:entry.getValue().size()=1,cha2qm.size()=1:{'m5cha'='m5cha' <=154}
RawDB.java:351: retrieveTbAttribute:tbAttribute=
{1=[('m5cha' <=154,m5)], 2=[('m5cha' <=154,m5)], 3=[('m5cha' <=154,m5)], 4=[('m5cha' <=154,m5)], 5=[('m5cha' <=154,m5)], 6=[('m5cha' <=154,m5)], 7=[('m5cha' <=154,m5)], 8=[('m5cha' <=154,m5)], 9=[('m5cha' <=154,m5)], 10=[('m5cha' <=154,m5)]}
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 1 AS did, record_id  FROM tb1 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 2 AS did, record_id  FROM tb2 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 3 AS did, record_id  FROM tb3 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 4 AS did, record_id  FROM tb4 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 5 AS did, record_id  FROM tb5 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 6 AS did, record_id  FROM tb6 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 7 AS did, record_id  FROM tb7 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 8 AS did, record_id  FROM tb8 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 9 AS did, record_id  FROM tb9 WHERE (m5<=154);
OMQueryBasic.java:551: executeOneCNFNonAggregateRawDB:sql= SELECT DISTINCT 10 AS did, record_id  FROM tb10 WHERE (m5<=154);
OMQueryBasic.java:498: executeOneCNF:oneCNF result size =690
ContextChain.java:289: execute:Context chain result size=690
******

OMQuery.java:351: execute:OMQuery DNF 0,oneDNFqueryResultSet size=690
OMQuery.java:355: execute:Time used (Query): 53 ms = 0s
-----------

OMQuery.java:359: execute:OMQuery result size=690
OMQuery.java:388: execute:Total queryResultSet size=690
QueryProcessor.java:78: main:Query i=9,result size=690

-----------

QueryProcessor.java:91: main: Query raw database.
QueryProcessor.java:97: main:Time used (Query): 1017 ms = 1s
-----------

QueryProcessor.java:100: main:qno=1, result size=500,queryI=1: 'e5'['m5cha' <=78], Context: {}
QueryProcessor.java:100: main:qno=2, result size=530,queryI=1: 'e5'['m5cha' <=87], Context: {}
QueryProcessor.java:100: main:qno=3, result size=540,queryI=1: 'e5'['m5cha' <=89], Context: {}
QueryProcessor.java:100: main:qno=4, result size=550,queryI=1: 'e5'['m5cha' <=91], Context: {}
QueryProcessor.java:100: main:qno=5, result size=580,queryI=1: 'e5'['m5cha' <=98], Context: {}
QueryProcessor.java:100: main:qno=6, result size=600,queryI=1: 'e5'['m5cha' <=123], Context: {}
QueryProcessor.java:100: main:qno=7, result size=610,queryI=1: 'e5'['m5cha' <=134], Context: {}
QueryProcessor.java:100: main:qno=8, result size=640,queryI=1: 'e5'['m5cha' <=135], Context: {}
QueryProcessor.java:100: main:qno=9, result size=670,queryI=1: 'e5'['m5cha' <=144], Context: {}
QueryProcessor.java:100: main:qno=10, result size=690,queryI=1: 'e5'['m5cha' <=154], Context: {}
QueryProcessor.java:102: main:AVERAGE time used (Query): 101 ms = 0s
-----------


-----------
QueryProcessor.java:110: main:Time used (Total=query+write out): 1018 ms = 1s
-----------

