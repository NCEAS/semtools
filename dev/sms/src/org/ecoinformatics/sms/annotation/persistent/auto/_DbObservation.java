package org.ecoinformatics.sms.annotation.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.ecoinformatics.sms.annotation.persistent.DbAnnotation;
import org.ecoinformatics.sms.annotation.persistent.DbContext;
import org.ecoinformatics.sms.annotation.persistent.DbMeasurement;

/**
 * Class _DbObservation was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _DbObservation extends CayenneDataObject {

    public static final String ENTITY_PROPERTY = "entity";
    public static final String ANNOTATION_PROPERTY = "annotation";
    public static final String CONTEXTS_PROPERTY = "contexts";
    public static final String MEASUREMENTS_PROPERTY = "measurements";

    public static final String ID_PK_COLUMN = "id";

    public void setEntity(String entity) {
        writeProperty("entity", entity);
    }
    public String getEntity() {
        return (String)readProperty("entity");
    }

    public void setAnnotation(DbAnnotation annotation) {
        setToOneTarget("annotation", annotation, true);
    }

    public DbAnnotation getAnnotation() {
        return (DbAnnotation)readProperty("annotation");
    }


    public void addToContexts(DbContext obj) {
        addToManyTarget("contexts", obj, true);
    }
    public void removeFromContexts(DbContext obj) {
        removeToManyTarget("contexts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbContext> getContexts() {
        return (List<DbContext>)readProperty("contexts");
    }


    public void addToMeasurements(DbMeasurement obj) {
        addToManyTarget("measurements", obj, true);
    }
    public void removeFromMeasurements(DbMeasurement obj) {
        removeToManyTarget("measurements", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbMeasurement> getMeasurements() {
        return (List<DbMeasurement>)readProperty("measurements");
    }


}
